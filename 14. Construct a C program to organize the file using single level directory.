#include <stdio.h>
#include <string.h>
#define MAX_FILES 10
#define MAX_NAME_LENGTH 20
struct File 
{
    char name[MAX_NAME_LENGTH];
    int size;
};
struct Directory 
{
    struct File files[MAX_FILES];
    int num_files;
};
void init_directory(struct Directory *dir) 
{
    dir->num_files = 0;
}
void add_file(struct Directory *dir, char name[], int size) 
{
    if (dir->num_files == MAX_FILES) 
    {
        printf("Error: directory is full\n");
        return;
    }
    strcpy(dir->files[dir->num_files].name, name);
    dir->files[dir->num_files].size = size;
    dir->num_files++;
}
void delete_file(struct Directory *dir, char name[]) 
{
    int index = -1;
    for (int i = 0; i < dir->num_files; i++) {
        if (strcmp(dir->files[i].name, name) == 0) 
        {
            index = i;
            break;
        }
    }
    if (index == -1) {
        printf("Error: file not found\n");
        return;
    }
    for (int i = index; i < dir->num_files - 1; i++) 
    {
        dir->files[i] = dir->files[i + 1];
    }
    dir->num_files--;
}
void list_files(struct Directory *dir) 
{
    for (int i = 0; i < dir->num_files; i++) 
    {
        printf("%s (size: %d)\n", dir->files[i].name, dir->files[i].size);
    }
}
int main() 
{
    struct Directory dir;
    init_directory(&dir);
    add_file(&dir, "file1.txt", 1024);
    add_file(&dir, "file2.txt", 2048);
    add_file(&dir, "file3.txt", 512);
    list_files(&dir);
    delete_file(&dir, "file2.txt");
    list_files(&dir);
    return 0;
}
