#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>
sem_t mutex, wrt;
int cnt = 1;
void *reader(void *arg)
{
    int f;
    f = ((int)arg);
    sem_wait(&mutex);
    cnt = cnt + 1;
    if(cnt==1)
    {
        sem_wait(&wrt);
    }
    sem_post(&mutex);
    printf("Reader %d is reading.\n", f);
    sleep(1);
    sem_wait(&mutex);
    cnt = cnt - 1;
    if(cnt==0)
    {
        sem_post(&wrt);
    }
    sem_post(&mutex);
}
void *writer(void *arg)
{
    int f;
    f = ((int) arg);
    sem_wait(&wrt);
    printf("Writer %d is writing.\n", f);
    sleep(1);
    sem_post(&wrt);
}
int main()
{
    int i, n1, n2;
    pthread_t rtid[100], wtid[100];
    sem_init(&mutex, 0, 1);
    sem_init(&wrt,0,1);
    printf("Enter the number of readers: ");
    scanf("%d", &n1);
    printf("Enter the number of writers: ");
    scanf("%d", &n2);
    for(i=0;i<n1;i++)
    {
        pthread_create(&rtid[i], NULL, reader, (void *)i);
    }
    for(i=0;i<n2;i++)
    {
        pthread_create(&wtid[i], NULL, writer, (void *)i);
    }
    for(i=0;i<n1;i++)
    {
        pthread_join(rtid[i],NULL);
    }
    for(i=0;i<n2;i++)
    {
        pthread_join(wtid[i],NULL);
    }
    sem_destroy(&mutex);
    sem_destroy(&wrt);
    return 0;
}
