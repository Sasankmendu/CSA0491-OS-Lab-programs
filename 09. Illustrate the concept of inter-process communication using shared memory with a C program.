#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/shm.h>
#define SHM_SIZE 1024
int main() 
{
    key_t key = 12345;
    int shmid;
    char *data;
    shmid = shmget(key, SHM_SIZE, IPC_CREAT | 0666);
    if (shmid < 0) 
    {
        perror("shmget failed");
        exit(1);
    }
    data = shmat(shmid, NULL, 0);
    if (data == (char *)(-1)) 
    {
        perror("shmat failed");
        exit(1);
    }
    if (fork() == 0) 
    {
        printf("child process: reading from shared memory\n");
        char read_data[SHM_SIZE];
        strcpy(read_data, data);
        printf("child process: read data: %s\n", read_data);
    } else 
    {
        printf("parent process: writing to shared memory\n");
        char write_data[] = "hello world";
        strcpy(data, write_data);
        sleep(1);
    }
    if (shmdt(data) == -1) {
        perror("shmdt failed");
        exit(1);
    }
    if (shmctl(shmid, IPC_RMID, NULL) == -1) {
        perror("shmctl failed");
        exit(1);
    }
    return 0;
}
